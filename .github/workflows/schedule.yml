name: 4-Hour Data Refresh

on:
  schedule:
    # Run every 4 hours
    - cron: "0 */4 * * *"
  workflow_dispatch:  # Allows manual triggering

jobs:
  run-refresh:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Check out the repository WITH PUSH PERMISSIONS
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}    # ✅ REQUIRED TO PUSH
          persist-credentials: true             # ✅ KEEPS TOKEN FOR git push

      # 2️⃣ Set up Python
      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      # 4️⃣ Set up credentials from GitHub Secrets
      - name: Setup credentials
        env:
          CREDENTIALS_JSON: ${{ secrets.CREDENTIALS_JSON }}
        run: |
          mkdir -p Training_Intensity_Report/config
          echo "$CREDENTIALS_JSON" > Training_Intensity_Report/config/credentials.json

      # 5️⃣ OPTIONAL: List files to debug paths
      - name: List data files
        run: ls -R

      # 6️⃣ Run the Python refresh script
      - name: Run refresh script
        run: python Training_Intensity_Report/dashboard/refresh_app_daily.py

      # 7️⃣ Commit and push updated data files
      - name: Commit and push changes
        if: success()  # Run only if Python script succeeded
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          # Stage ALL .csv files in the data folder
          git add Training_Intensity_Report/dashboard/data/*.csv

          # If no changes, skip commit
          git diff --cached --quiet || git commit -m "Automated data refresh"

          # Push back to the same branch (main by default)
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}